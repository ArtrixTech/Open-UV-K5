/* Copyright 2023 Dual Tachyon
 * https://github.com/DualTachyon
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef HARDWARE_DP32G030_UART_H
#define HARDWARE_DP32G030_UART_H

#if !defined(__ASSEMBLY__)
#include <stdint.h>
#endif

/* -------- UART0 -------- */
#define UART0_BASE_ADDR               0x4006B000U
#define UART0_BASE_SIZE               0x00000800U
#define UART0                         ((volatile UART_Port_t *)UART0_BASE_ADDR)

/* -------- UART1 -------- */
#define UART1_BASE_ADDR               0x4006B800U
#define UART1_BASE_SIZE               0x00000800U
#define UART1                         ((volatile UART_Port_t *)UART1_BASE_ADDR)

/* -------- UART2 -------- */
#define UART2_BASE_ADDR               0x4006C000U
#define UART2_BASE_SIZE               0x00000800U
#define UART2                         ((volatile UART_Port_t *)UART2_BASE_ADDR)

/* -------- UART -------- */

typedef struct {
	uint32_t CTRL;
	uint32_t BAUD;
	uint32_t TDR;
	uint32_t RDR;
	uint32_t IE;
	uint32_t IF;
	uint32_t FIFO;
	uint32_t FC;
	uint32_t RXTO;
} UART_Port_t;

#define UART_CTRL_UARTEN_SHIFT        0
#define UART_CTRL_UARTEN_WIDTH        1
#define UART_CTRL_UARTEN_MASK         (((1U << UART_CTRL_UARTEN_WIDTH) - 1U) << UART_CTRL_UARTEN_SHIFT)
#define UART_CTRL_UARTEN_DISABLE      (0U << UART_CTRL_UARTEN_SHIFT)
#define UART_CTRL_UARTEN_ENABLE       (1U << UART_CTRL_UARTEN_SHIFT)

#define UART_CTRL_RXEN_SHIFT          1
#define UART_CTRL_RXEN_WIDTH          1
#define UART_CTRL_RXEN_MASK           (((1U << UART_CTRL_RXEN_WIDTH) - 1U) << UART_CTRL_RXEN_SHIFT)
#define UART_CTRL_RXEN_DISABLE        (0U << UART_CTRL_RXEN_SHIFT)
#define UART_CTRL_RXEN_ENABLE         (1U << UART_CTRL_RXEN_SHIFT)

#define UART_CTRL_TXEN_SHIFT          2
#define UART_CTRL_TXEN_WIDTH          1
#define UART_CTRL_TXEN_MASK           (((1U << UART_CTRL_TXEN_WIDTH) - 1U) << UART_CTRL_TXEN_SHIFT)
#define UART_CTRL_TXEN_DISABLE        (0U << UART_CTRL_TXEN_SHIFT)
#define UART_CTRL_TXEN_ENABLE         (1U << UART_CTRL_TXEN_SHIFT)

#define UART_CTRL_RXDMAEN_SHIFT       3
#define UART_CTRL_RXDMAEN_WIDTH       1
#define UART_CTRL_RXDMAEN_MASK        (((1U << UART_CTRL_RXDMAEN_WIDTH) - 1U) << UART_CTRL_RXDMAEN_SHIFT)
#define UART_CTRL_RXDMAEN_DISABLE     (0U << UART_CTRL_RXDMAEN_SHIFT)
#define UART_CTRL_RXDMAEN_ENABLE      (1U << UART_CTRL_RXDMAEN_SHIFT)

#define UART_CTRL_TXDMAEN_SHIFT       4
#define UART_CTRL_TXDMAEN_WIDTH       1
#define UART_CTRL_TXDMAEN_MASK        (((1U << UART_CTRL_TXDMAEN_WIDTH) - 1U) << UART_CTRL_TXDMAEN_SHIFT)
#define UART_CTRL_TXDMAEN_DISABLE     (0U << UART_CTRL_TXDMAEN_SHIFT)
#define UART_CTRL_TXDMAEN_ENABLE      (1U << UART_CTRL_TXDMAEN_SHIFT)

#define UART_CTRL_NINEBIT_SHIFT       5
#define UART_CTRL_NINEBIT_WIDTH       1
#define UART_CTRL_NINEBIT_MASK        (((1U << UART_CTRL_NINEBIT_WIDTH) - 1U) << UART_CTRL_NINEBIT_SHIFT)
#define UART_CTRL_NINEBIT_DISABLE     (0U << UART_CTRL_NINEBIT_SHIFT)
#define UART_CTRL_NINEBIT_ENABLE      (1U << UART_CTRL_NINEBIT_SHIFT)

#define UART_CTRL_PAREN_SHIFT         6
#define UART_CTRL_PAREN_WIDTH         1
#define UART_CTRL_PAREN_MASK          (((1U << UART_CTRL_PAREN_WIDTH) - 1U) << UART_CTRL_PAREN_SHIFT)
#define UART_CTRL_PAREN_DISABLE       (0U << UART_CTRL_PAREN_SHIFT)
#define UART_CTRL_PAREN_ENABLE        (1U << UART_CTRL_PAREN_SHIFT)

#define UART_IE_TXDONE_SHIFT          2
#define UART_IE_TXDONE_WIDTH          1
#define UART_IE_TXDONE_MASK           (((1U << UART_IE_TXDONE_WIDTH) - 1U) << UART_IE_TXDONE_SHIFT)
#define UART_IE_TXDONE_DISABLE        (0U << UART_IE_TXDONE_SHIFT)
#define UART_IE_TXDONE_ENABLE         (1U << UART_IE_TXDONE_SHIFT)

#define UART_IE_PARITYE_SHIFT         3
#define UART_IE_PARITYE_WIDTH         1
#define UART_IE_PARITYE_MASK          (((1U << UART_IE_PARITYE_WIDTH) - 1U) << UART_IE_PARITYE_SHIFT)
#define UART_IE_PARITYE_DISABLE       (0U << UART_IE_PARITYE_SHIFT)
#define UART_IE_PARITYE_ENABLE        (1U << UART_IE_PARITYE_SHIFT)

#define UART_IE_STOPE_SHIFT           4
#define UART_IE_STOPE_WIDTH           1
#define UART_IE_STOPE_MASK            (((1U << UART_IE_STOPE_WIDTH) - 1U) << UART_IE_STOPE_SHIFT)
#define UART_IE_STOPE_DISABLE         (0U << UART_IE_STOPE_SHIFT)
#define UART_IE_STOPE_ENABLE          (1U << UART_IE_STOPE_SHIFT)

#define UART_IE_RXTO_SHIFT            5
#define UART_IE_RXTO_WIDTH            1
#define UART_IE_RXTO_MASK             (((1U << UART_IE_RXTO_WIDTH) - 1U) << UART_IE_RXTO_SHIFT)
#define UART_IE_RXTO_DISABLE          (0U << UART_IE_RXTO_SHIFT)
#define UART_IE_RXTO_ENABLE           (1U << UART_IE_RXTO_SHIFT)

#define UART_IE_RXFIFO_SHIFT          6
#define UART_IE_RXFIFO_WIDTH          1
#define UART_IE_RXFIFO_MASK           (((1U << UART_IE_RXFIFO_WIDTH) - 1U) << UART_IE_RXFIFO_SHIFT)
#define UART_IE_RXFIFO_DISABLE        (0U << UART_IE_RXFIFO_SHIFT)
#define UART_IE_RXFIFO_ENABLE         (1U << UART_IE_RXFIFO_SHIFT)

#define UART_IE_TXFIFO_SHIFT          7
#define UART_IE_TXFIFO_WIDTH          1
#define UART_IE_TXFIFO_MASK           (((1U << UART_IE_TXFIFO_WIDTH) - 1U) << UART_IE_TXFIFO_SHIFT)
#define UART_IE_TXFIFO_DISABLE        (0U << UART_IE_TXFIFO_SHIFT)
#define UART_IE_TXFIFO_ENABLE         (1U << UART_IE_TXFIFO_SHIFT)

#define UART_IE_RXFIFO_OVF_SHIFT      8
#define UART_IE_RXFIFO_OVF_WIDTH      1
#define UART_IE_RXFIFO_OVF_MASK       (((1U << UART_IE_RXFIFO_OVF_WIDTH) - 1U) << UART_IE_RXFIFO_OVF_SHIFT)
#define UART_IE_RXFIFO_OVF_DISABLE    (0U << UART_IE_RXFIFO_OVF_SHIFT)
#define UART_IE_RXFIFO_OVF_ENABLE     (1U << UART_IE_RXFIFO_OVF_SHIFT)

#define UART_IE_ABRD_OVF_SHIFT        9
#define UART_IE_ABRD_OVF_WIDTH        1
#define UART_IE_ABRD_OVF_MASK         (((1U << UART_IE_ABRD_OVF_WIDTH) - 1U) << UART_IE_ABRD_OVF_SHIFT)
#define UART_IE_ABRD_OVF_DISABLE      (0U << UART_IE_ABRD_OVF_SHIFT)
#define UART_IE_ABRD_OVF_ENABLE       (1U << UART_IE_ABRD_OVF_SHIFT)

#define UART_IF_TXDONE_SHIFT          2
#define UART_IF_TXDONE_WIDTH          1
#define UART_IF_TXDONE_MASK           (((1U << UART_IF_TXDONE_WIDTH) - 1U) << UART_IF_TXDONE_SHIFT)
#define UART_IF_TXDONE_NOT_SET        (0U << UART_IF_TXDONE_SHIFT)
#define UART_IF_TXDONE_SET            (1U << UART_IF_TXDONE_SHIFT)

#define UART_IF_PARITYE_SHIFT         3
#define UART_IF_PARITYE_WIDTH         1
#define UART_IF_PARITYE_MASK          (((1U << UART_IF_PARITYE_WIDTH) - 1U) << UART_IF_PARITYE_SHIFT)
#define UART_IF_PARITYE_NOT_SET       (0U << UART_IF_PARITYE_SHIFT)
#define UART_IF_PARITYE_SET           (1U << UART_IF_PARITYE_SHIFT)

#define UART_IF_STOPE_SHIFT           4
#define UART_IF_STOPE_WIDTH           1
#define UART_IF_STOPE_MASK            (((1U << UART_IF_STOPE_WIDTH) - 1U) << UART_IF_STOPE_SHIFT)
#define UART_IF_STOPE_NOT_SET         (0U << UART_IF_STOPE_SHIFT)
#define UART_IF_STOPE_SET             (1U << UART_IF_STOPE_SHIFT)

#define UART_IF_RXTO_SHIFT            5
#define UART_IF_RXTO_WIDTH            1
#define UART_IF_RXTO_MASK             (((1U << UART_IF_RXTO_WIDTH) - 1U) << UART_IF_RXTO_SHIFT)
#define UART_IF_RXTO_NOT_SET          (0U << UART_IF_RXTO_SHIFT)
#define UART_IF_RXTO_SET              (1U << UART_IF_RXTO_SHIFT)

#define UART_IF_RXFIFO_SHIFT          6
#define UART_IF_RXFIFO_WIDTH          1
#define UART_IF_RXFIFO_MASK           (((1U << UART_IF_RXFIFO_WIDTH) - 1U) << UART_IF_RXFIFO_SHIFT)
#define UART_IF_RXFIFO_NOT_SET        (0U << UART_IF_RXFIFO_SHIFT)
#define UART_IF_RXFIFO_SET            (1U << UART_IF_RXFIFO_SHIFT)

#define UART_IF_TXFIFO_SHIFT          7
#define UART_IF_TXFIFO_WIDTH          1
#define UART_IF_TXFIFO_MASK           (((1U << UART_IF_TXFIFO_WIDTH) - 1U) << UART_IF_TXFIFO_SHIFT)
#define UART_IF_TXFIFO_NOT_SET        (0U << UART_IF_TXFIFO_SHIFT)
#define UART_IF_TXFIFO_SET            (1U << UART_IF_TXFIFO_SHIFT)

#define UART_IF_RXFIFO_OVF_SHIFT      8
#define UART_IF_RXFIFO_OVF_WIDTH      1
#define UART_IF_RXFIFO_OVF_MASK       (((1U << UART_IF_RXFIFO_OVF_WIDTH) - 1U) << UART_IF_RXFIFO_OVF_SHIFT)
#define UART_IF_RXFIFO_OVF_NOT_SET    (0U << UART_IF_RXFIFO_OVF_SHIFT)
#define UART_IF_RXFIFO_OVF_SET        (1U << UART_IF_RXFIFO_OVF_SHIFT)

#define UART_IF_ABRD_OVF_SHIFT        9
#define UART_IF_ABRD_OVF_WIDTH        1
#define UART_IF_ABRD_OVF_MASK         (((1U << UART_IF_ABRD_OVF_WIDTH) - 1U) << UART_IF_ABRD_OVF_SHIFT)
#define UART_IF_ABRD_OVF_NOT_SET      (0U << UART_IF_ABRD_OVF_SHIFT)
#define UART_IF_ABRD_OVF_SET          (1U << UART_IF_ABRD_OVF_SHIFT)

#define UART_IF_RXFIFO_EMPTY_SHIFT    10
#define UART_IF_RXFIFO_EMPTY_WIDTH    1
#define UART_IF_RXFIFO_EMPTY_MASK     (((1U << UART_IF_RXFIFO_EMPTY_WIDTH) - 1U) << UART_IF_RXFIFO_EMPTY_SHIFT)
#define UART_IF_RXFIFO_EMPTY_NOT_SET  (0U << UART_IF_RXFIFO_EMPTY_SHIFT)
#define UART_IF_RXFIFO_EMPTY_SET      (1U << UART_IF_RXFIFO_EMPTY_SHIFT)

#define UART_IF_RXFIFO_FULL_SHIFT     11
#define UART_IF_RXFIFO_FULL_WIDTH     1
#define UART_IF_RXFIFO_FULL_MASK      (((1U << UART_IF_RXFIFO_FULL_WIDTH) - 1U) << UART_IF_RXFIFO_FULL_SHIFT)
#define UART_IF_RXFIFO_FULL_NOT_SET   (0U << UART_IF_RXFIFO_FULL_SHIFT)
#define UART_IF_RXFIFO_FULL_SET       (1U << UART_IF_RXFIFO_FULL_SHIFT)

#define UART_IF_RXFIFO_HFULL_SHIFT    12
#define UART_IF_RXFIFO_HFULL_WIDTH    1
#define UART_IF_RXFIFO_HFULL_MASK     (((1U << UART_IF_RXFIFO_HFULL_WIDTH) - 1U) << UART_IF_RXFIFO_HFULL_SHIFT)
#define UART_IF_RXFIFO_HFULL_NOT_SET  (0U << UART_IF_RXFIFO_HFULL_SHIFT)
#define UART_IF_RXFIFO_HFULL_SET      (1U << UART_IF_RXFIFO_HFULL_SHIFT)

#define UART_IF_TXFIFO_EMPTY_SHIFT    13
#define UART_IF_TXFIFO_EMPTY_WIDTH    1
#define UART_IF_TXFIFO_EMPTY_MASK     (((1U << UART_IF_TXFIFO_EMPTY_WIDTH) - 1U) << UART_IF_TXFIFO_EMPTY_SHIFT)
#define UART_IF_TXFIFO_EMPTY_NOT_SET  (0U << UART_IF_TXFIFO_EMPTY_SHIFT)
#define UART_IF_TXFIFO_EMPTY_SET      (1U << UART_IF_TXFIFO_EMPTY_SHIFT)

#define UART_IF_TXFIFO_FULL_SHIFT     14
#define UART_IF_TXFIFO_FULL_WIDTH     1
#define UART_IF_TXFIFO_FULL_MASK      (((1U << UART_IF_TXFIFO_FULL_WIDTH) - 1U) << UART_IF_TXFIFO_FULL_SHIFT)
#define UART_IF_TXFIFO_FULL_NOT_SET   (0U << UART_IF_TXFIFO_FULL_SHIFT)
#define UART_IF_TXFIFO_FULL_SET       (1U << UART_IF_TXFIFO_FULL_SHIFT)

#define UART_IF_TXFIFO_HFULL_SHIFT    15
#define UART_IF_TXFIFO_HFULL_WIDTH    1
#define UART_IF_TXFIFO_HFULL_MASK     (((1U << UART_IF_TXFIFO_HFULL_WIDTH) - 1U) << UART_IF_TXFIFO_HFULL_SHIFT)
#define UART_IF_TXFIFO_HFULL_NOT_SET  (0U << UART_IF_TXFIFO_HFULL_SHIFT)
#define UART_IF_TXFIFO_HFULL_SET      (1U << UART_IF_TXFIFO_HFULL_SHIFT)

#define UART_IF_TXBUSY_SHIFT          16
#define UART_IF_TXBUSY_WIDTH          1
#define UART_IF_TXBUSY_MASK           (((1U << UART_IF_TXBUSY_WIDTH) - 1U) << UART_IF_TXBUSY_SHIFT)
#define UART_IF_TXBUSY_NOT_SET        (0U << UART_IF_TXBUSY_SHIFT)
#define UART_IF_TXBUSY_SET            (1U << UART_IF_TXBUSY_SHIFT)

#define UART_IF_RF_LEVEL_SHIFT        17
#define UART_IF_RF_LEVEL_WIDTH        3
#define UART_IF_RF_LEVEL_MASK         (((1U << UART_IF_RF_LEVEL_WIDTH) - 1U) << UART_IF_RF_LEVEL_SHIFT)
#define UART_IF_RF_LEVEL_0_8_BYTE     (0U << UART_IF_RF_LEVEL_SHIFT)
#define UART_IF_RF_LEVEL_1_BYTE       (1U << UART_IF_RF_LEVEL_SHIFT)
#define UART_IF_RF_LEVEL_2_BYTE       (2U << UART_IF_RF_LEVEL_SHIFT)
#define UART_IF_RF_LEVEL_3_BYTE       (3U << UART_IF_RF_LEVEL_SHIFT)
#define UART_IF_RF_LEVEL_4_BYTE       (4U << UART_IF_RF_LEVEL_SHIFT)
#define UART_IF_RF_LEVEL_5_BYTE       (5U << UART_IF_RF_LEVEL_SHIFT)
#define UART_IF_RF_LEVEL_6_BYTE       (6U << UART_IF_RF_LEVEL_SHIFT)
#define UART_IF_RF_LEVEL_7_BYTE       (7U << UART_IF_RF_LEVEL_SHIFT)

#define UART_IF_TF_LEVEL_SHIFT        20
#define UART_IF_TF_LEVEL_WIDTH        3
#define UART_IF_TF_LEVEL_MASK         (((1U << UART_IF_TF_LEVEL_WIDTH) - 1U) << UART_IF_TF_LEVEL_SHIFT)
#define UART_IF_TF_LEVEL_0_8_BYTE     (0U << UART_IF_TF_LEVEL_SHIFT)
#define UART_IF_TF_LEVEL_1_BYTE       (1U << UART_IF_TF_LEVEL_SHIFT)
#define UART_IF_TF_LEVEL_2_BYTE       (2U << UART_IF_TF_LEVEL_SHIFT)
#define UART_IF_TF_LEVEL_3_BYTE       (3U << UART_IF_TF_LEVEL_SHIFT)
#define UART_IF_TF_LEVEL_4_BYTE       (4U << UART_IF_TF_LEVEL_SHIFT)
#define UART_IF_TF_LEVEL_5_BYTE       (5U << UART_IF_TF_LEVEL_SHIFT)
#define UART_IF_TF_LEVEL_6_BYTE       (6U << UART_IF_TF_LEVEL_SHIFT)
#define UART_IF_TF_LEVEL_7_BYTE       (7U << UART_IF_TF_LEVEL_SHIFT)

#define UART_FIFO_RF_LEVEL_SHIFT      0
#define UART_FIFO_RF_LEVEL_WIDTH      3
#define UART_FIFO_RF_LEVEL_MASK       (((1U << UART_FIFO_RF_LEVEL_WIDTH) - 1U) << UART_FIFO_RF_LEVEL_SHIFT)
#define UART_FIFO_RF_LEVEL_1_BYTE     (0U << UART_FIFO_RF_LEVEL_SHIFT)
#define UART_FIFO_RF_LEVEL_2_BYTE     (1U << UART_FIFO_RF_LEVEL_SHIFT)
#define UART_FIFO_RF_LEVEL_3_BYTE     (2U << UART_FIFO_RF_LEVEL_SHIFT)
#define UART_FIFO_RF_LEVEL_4_BYTE     (3U << UART_FIFO_RF_LEVEL_SHIFT)
#define UART_FIFO_RF_LEVEL_5_BYTE     (4U << UART_FIFO_RF_LEVEL_SHIFT)
#define UART_FIFO_RF_LEVEL_6_BYTE     (5U << UART_FIFO_RF_LEVEL_SHIFT)
#define UART_FIFO_RF_LEVEL_7_BYTE     (6U << UART_FIFO_RF_LEVEL_SHIFT)
#define UART_FIFO_RF_LEVEL_8_BYTE     (7U << UART_FIFO_RF_LEVEL_SHIFT)

#define UART_FIFO_TF_LEVEL_SHIFT      3
#define UART_FIFO_TF_LEVEL_WIDTH      3
#define UART_FIFO_TF_LEVEL_MASK       (((1U << UART_FIFO_TF_LEVEL_WIDTH) - 1U) << UART_FIFO_TF_LEVEL_SHIFT)
#define UART_FIFO_TF_LEVEL_0_BYTE     (0U << UART_FIFO_TF_LEVEL_SHIFT)
#define UART_FIFO_TF_LEVEL_1_BYTE     (1U << UART_FIFO_TF_LEVEL_SHIFT)
#define UART_FIFO_TF_LEVEL_2_BYTE     (2U << UART_FIFO_TF_LEVEL_SHIFT)
#define UART_FIFO_TF_LEVEL_3_BYTE     (3U << UART_FIFO_TF_LEVEL_SHIFT)
#define UART_FIFO_TF_LEVEL_4_BYTE     (4U << UART_FIFO_TF_LEVEL_SHIFT)
#define UART_FIFO_TF_LEVEL_5_BYTE     (5U << UART_FIFO_TF_LEVEL_SHIFT)
#define UART_FIFO_TF_LEVEL_6_BYTE     (6U << UART_FIFO_TF_LEVEL_SHIFT)
#define UART_FIFO_TF_LEVEL_7_BYTE     (7U << UART_FIFO_TF_LEVEL_SHIFT)

#define UART_FIFO_RF_CLR_SHIFT        6
#define UART_FIFO_RF_CLR_WIDTH        1
#define UART_FIFO_RF_CLR_MASK         (((1U << UART_FIFO_RF_CLR_WIDTH) - 1U) << UART_FIFO_RF_CLR_SHIFT)
#define UART_FIFO_RF_CLR_DISABLE      (0U << UART_FIFO_RF_CLR_SHIFT)
#define UART_FIFO_RF_CLR_ENABLE       (1U << UART_FIFO_RF_CLR_SHIFT)

#define UART_FIFO_TF_CLR_SHIFT        7
#define UART_FIFO_TF_CLR_WIDTH        1
#define UART_FIFO_TF_CLR_MASK         (((1U << UART_FIFO_TF_CLR_WIDTH) - 1U) << UART_FIFO_TF_CLR_SHIFT)
#define UART_FIFO_TF_CLR_DISABLE      (0U << UART_FIFO_TF_CLR_SHIFT)
#define UART_FIFO_TF_CLR_ENABLE       (1U << UART_FIFO_TF_CLR_SHIFT)

#define UART_FC_CTSEN_SHIFT           0
#define UART_FC_CTSEN_WIDTH           1
#define UART_FC_CTSEN_MASK            (((1U << UART_FC_CTSEN_WIDTH) - 1U) << UART_FC_CTSEN_SHIFT)
#define UART_FC_CTSEN_DISABLE         (0U << UART_FC_CTSEN_SHIFT)
#define UART_FC_CTSEN_ENABLE          (1U << UART_FC_CTSEN_SHIFT)

#define UART_FC_RTSEN_SHIFT           1
#define UART_FC_RTSEN_WIDTH           1
#define UART_FC_RTSEN_MASK            (((1U << UART_FC_RTSEN_WIDTH) - 1U) << UART_FC_RTSEN_SHIFT)
#define UART_FC_RTSEN_DISABLE         (0U << UART_FC_RTSEN_SHIFT)
#define UART_FC_RTSEN_ENABLE          (1U << UART_FC_RTSEN_SHIFT)

#define UART_FC_CTSPOL_SHIFT          2
#define UART_FC_CTSPOL_WIDTH          1
#define UART_FC_CTSPOL_MASK           (((1U << UART_FC_CTSPOL_WIDTH) - 1U) << UART_FC_CTSPOL_SHIFT)
#define UART_FC_CTSPOL_LOW            (0U << UART_FC_CTSPOL_SHIFT)
#define UART_FC_CTSPOL_HIGH           (1U << UART_FC_CTSPOL_SHIFT)

#define UART_FC_RTSPOL_SHIFT          3
#define UART_FC_RTSPOL_WIDTH          1
#define UART_FC_RTSPOL_MASK           (((1U << UART_FC_RTSPOL_WIDTH) - 1U) << UART_FC_RTSPOL_SHIFT)
#define UART_FC_RTSPOL_LOW            (0U << UART_FC_RTSPOL_SHIFT)
#define UART_FC_RTSPOL_HIGH           (1U << UART_FC_RTSPOL_SHIFT)

#define UART_FC_CTS_SIGNAL_SHIFT      4
#define UART_FC_CTS_SIGNAL_WIDTH      1
#define UART_FC_CTS_SIGNAL_MASK       (((1U << UART_FC_CTS_SIGNAL_WIDTH) - 1U) << UART_FC_CTS_SIGNAL_SHIFT)
#define UART_FC_CTS_SIGNAL_LOW        (0U << UART_FC_CTS_SIGNAL_SHIFT)
#define UART_FC_CTS_SIGNAL_HIGH       (1U << UART_FC_CTS_SIGNAL_SHIFT)

#define UART_FC_RTS_SIGNAL_SHIFT      5
#define UART_FC_RTS_SIGNAL_WIDTH      1
#define UART_FC_RTS_SIGNAL_MASK       (((1U << UART_FC_RTS_SIGNAL_WIDTH) - 1U) << UART_FC_RTS_SIGNAL_SHIFT)
#define UART_FC_RTS_SIGNAL_LOW        (0U << UART_FC_RTS_SIGNAL_SHIFT)
#define UART_FC_RTS_SIGNAL_HIGH       (1U << UART_FC_RTS_SIGNAL_SHIFT)


#endif

